name: Build and publish pdf to Google Drive
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Compile main.tex
        uses: dante-ev/latex-action@edge
        with:
          root_file: main.tex

      - name: Upload compiled artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled
          path: main.pdf

  publish_to_google_drive:
    runs-on: ubuntu-latest
    needs: build_latex
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Download artifact from previous job
        uses: actions/download-artifact@v4
        with:
          name: compiled
          path: ./

      - name: Rename PDF with commit hash
        run: mv main.pdf main-${{ github.sha }}.pdf

      - name: Verify file exists
        run: ls -la main-${{ github.sha }}.pdf

      - name: Debug - Check credentials format
        run: |
          echo "Checking credentials format..."
          if echo "${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}" | base64 -d > /dev/null 2>&1; then
            echo "✓ Credentials are valid base64"
            echo "${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}" | base64 -d | jq -r '.client_email' | head -c 20
            echo "... (service account email)"
          else
            echo "✗ Credentials are not valid base64"
          fi

      - name: Debug - Check folder ID
        run: |
          echo "Folder ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}"
          echo "Length: $(echo '${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}' | wc -c)"

      - name: Upload to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}
          filename: main-${{ github.sha }}.pdf
          folderId: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          name: main-${{ github.sha }}.pdf
          overwrite: "true"
        continue-on-error: true
        id: upload

      - name: Handle upload failure
        if: steps.upload.outcome == 'failure'
        run: |
          echo "Upload failed. Common issues:"
          echo "1. Service account email not shared with folder"
          echo "2. Google Drive API not enabled for project"
          echo "3. Incorrect folder ID"
          echo "4. Service account lacks necessary permissions"
          echo ""
          echo "Please verify:"
          echo "- Folder shared with service account: $(echo '${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}' | base64 -d | jq -r '.client_email')"
          echo "- Drive API enabled at: https://console.developers.google.com/apis/api/drive.googleapis.com/overview"
          echo "- Folder ID is correct: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}"
          exit 1

      - name: Alternative upload method (if main upload fails)
        if: steps.upload.outcome == 'failure'
        run: |
          echo "Trying alternative upload method..."
          # Decode credentials
          echo '${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}' | base64 -d > /tmp/credentials.json
          
          # Get access token
          ACCESS_TOKEN=$(curl -s -X POST https://oauth2.googleapis.com/token \
            -H "Content-Type: application/json" \
            -d "{
              \"grant_type\": \"urn:ietf:params:oauth:grant-type:jwt-bearer\",
              \"assertion\": \"$(python3 -c \"
import json, jwt, time
with open('/tmp/credentials.json') as f:
    creds = json.load(f)
payload = {
    'iss': creds['client_email'],
    'scope': 'https://www.googleapis.com/auth/drive.file',
    'aud': 'https://oauth2.googleapis.com/token',
    'exp': int(time.time()) + 3600,
    'iat': int(time.time())
}
print(jwt.encode(payload, creds['private_key'], algorithm='RS256'))
              \")
            }" | jq -r '.access_token')
          
          # Upload file
          curl -X POST https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -F "metadata={\"name\":\"main-${{ github.sha }}.pdf\",\"parents\":[\"${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}\"]};type=application/json;charset=UTF-8" \
            -F "file=@main-${{ github.sha }}.pdf;type=application/pdf"
